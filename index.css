* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

body {
    overflow: hidden;
}

:root {
    --color: blueviolet;
    --speech-bubble-triangle: 20px;
}


#input-container {
    display:flex;
    justify-content: center;
    padding: 5px;
    width: 70%;
    position: fixed;
     margin: 250px 60px 60px 60px;
}

  .shine{
    top: 80px;
    font-weight: bold;
    font-size: 300%;
    margin: 50px;
    position: fixed;
  }

  .shine {
    background: #222 -webkit-gradient(linear, left top, right top, from(#222), to(#222), color-stop(0.5, #fff)) 0 0 no-repeat;
    -webkit-background-size: 150px;
    color: rgba(255, 255, 255, 0.3);
    -webkit-background-clip: text;
    -webkit-animation-name: shine;
    -webkit-animation-duration: 5s;
    -webkit-animation-iteration-count: infinite;
    /* text-shadow: 0 0px 0px rgba(255, 255, 255, 0.5); */
  }

  @-webkit-keyframes shine {
    0%, 10% {
      background-position: -1000px;
    }
    20% {
      background-position: top left;
    }
    90% {
      background-position: top right;
    }
    100% {
      background-position: 1000px;
    }
  }

#error-message {
    color: red;
}

#banner {
    position: fixed;
    margin-top: 40px;
}

.shrink-space {
    transition: font-size 1s;
    font-size: 0;
}

span[data-alternate="a"] {
    border: none;
    display: inline-block;
    transition: background-color 0.3s;
}

span[data-alternate="an"] {
    border: none;
    display: inline-block;
    transition: background-color 0.3s;
}

span[data-alternate="the"],
span[data-alternate="The"] {
    border: none;
    display: inline-block;
    transition: background-color 0.3s;
}

/* Giggling Text Animation */
@keyframes giggle {
    0% {
        transform: rotate(0deg) translateY(0);
      }
      25% {
        transform: rotate(5deg) translateY(-5px);
      }
      75% {
        transform: rotate(-5deg) translateY(-5px);
      }
      100% {
        transform: rotate(0deg) translateY(0);
      }
  }

  .giggling-text {
    animation-name: giggle;
    animation-duration: 0.3s;
    animation-timing-function: ease-in-out;
    animation-iteration-count: 3;
  }

  .rightside-up {
    position: relative;
    transform: rotate(180deg);
}

.upside-down {
    transition: 1s;
    display: inline-block;
    transform: rotate(-180deg);
}

@keyframes floatUpToLeft {
    0% { transform: translateY(0) translateX(0); opacity: 1; }
    100% { transform: translateY(-100vh) translateX(-150px); opacity: 0; } /* Adjust translateX value as needed */
}

@keyframes floatDownFromLeft {
    0% { transform: translateY(-100vh) translateX(-150px); opacity: 0; }
    100% { transform: translateY(0) translateX(0); opacity: 1; }
}

@keyframes floatUpToRight {
    0% { transform: translateY(0) translateX(0); opacity: 1; }
    100% { transform: translateY(-100vh) translateX(50px); opacity: 0; } /* Adjust translateX value as needed */
}

@keyframes floatDownFromRight {
    0% { transform: translateY(-100vh) translateX(150px); opacity: 0; }
    100% { transform: translateY(0) translateX(0); opacity: 1; }
}

.floatingUpToLeft {
    animation: floatUpToLeft 0.5s forwards;
    position: relative;
    display: inline-block;
}

.floatingDownFromLeft {
    animation: floatDownFromLeft 0.5s forwards;
    position: relative;
    display: inline-block;
}

.floatingUpToRight {
    animation: floatUpToRight 0.5s forwards;
    position: relative;
    display: inline-block;
}

.floatingDownFromRight {
    animation: floatDownFromRight 0.5s forwards;
    position: relative;
    display: inline-block;
}

/* prevents highlighting of text on mobile */
.noSelect {
    user-select: none;       /* Standard syntax */
    -webkit-user-select: none; /* Safari 3.1+ */
    -moz-user-select: none;    /* Firefox 2+ */
    -ms-user-select: none;     /* IE 10+ */
}

 #contraction-container {
    position: fixed;
    margin-top: 50px;
}

#contraction-check {
    margin: 10px;
}

/* Base styling */
.create-wordplay-button {
    font-size: 18px;
    font-weight: bold;
    color: white;
    background: linear-gradient(45deg, #ff416c, #ff4b2b);
    border: none;
    padding: 12px 20px;
    border-radius: 50px;
    cursor: pointer;
    transition: all 0.3s ease-in-out;
    box-shadow: 0 5px 15px rgba(255, 65, 108, 0.4);
    outline: none;
    position: relative;
    overflow: hidden;
}

/* Button Hover: Expands slightly and shifts colors */
.create-wordplay-button:hover {
    transform: scale(1.05);
    background: linear-gradient(45deg, #ff4b2b, #ff416c);
    box-shadow: 0 8px 20px rgba(255, 65, 108, 0.6);
}

/* Button Click: Press-down effect */
.create-wordplay-button:active {
    transform: scale(0.98);
    box-shadow: 0 3px 10px rgba(255, 65, 108, 0.5);
}

/* Glowing Border Effect */
.create-wordplay-button::before {
    content: "";
    position: absolute;
    top: -2px;
    left: -2px;
    right: -2px;
    bottom: -2px;
    border-radius: 50px;
    background: linear-gradient(45deg, #ff416c, #ff4b2b, #ff416c);
    z-index: -1;
    opacity: 0;
    transition: opacity 0.3s ease-in-out;
}

/* Border appears on hover */
.create-wordplay-button:hover::before {
    opacity: 1;
}


footer {
    color: blueviolet;
    font-family: 'Palanquin', sans-serif;
    position: fixed;
    bottom: 5;
    display: flex;
    width: 100%;
    justify-content: start;
}

footer > div {
    padding: 5px;
}

/* Style all font awesome icons */
.fa {
    font-size: 30px;
    width: 30px;
    text-align: center;
    text-decoration: none;
    border-radius: 30%;
  }

  .fa:hover {
    opacity: 0.7;
  }

  /* Facebook */
.fa-instagram {
    background: #e95950;
    color: white;
  }

  /* Github */
  .fa-github {
    background: black;
    color: white;
  }

#hint-button {
    position: fixed;
    cursor: pointer;
    top: 20;
    left: 20;
    margin: 5px;
    font-family: 'Palanquin', sans-serif;
    color: white;
    padding: 5px;
    background-color: blueviolet;
    border-radius: 4px;
    text-shadow: 1px 0 0 #000, 0 -1px 0 #000, 0 1px 0 #000, -1px 0 0 #000;
}

#hint-button:hover {
    opacity: 0.7;
}

#sentence-container {
    /* border: black solid 2px; */
    position: absolute;
    width: 100vw;
}

#input-sentence {
    width: 70%;
    border-radius: 4px;
    font-size: large;
    margin: 5px"
}


.grid-container {
    display: grid;
    grid-template-areas:
    "hero hero  hero "
    ".    shoot  .   "
    "left switch right";
}

#name-tag {
    color: var(--color);
    text-shadow: 1px 0 0 #000, 0 -1px 0 #000, 0 1px 0 #000, -1px 0 0 #000;
}

#control-buttons {
    position: fixed;
        bottom: 50;
        right: 30;
}

/* @media screen and (max-width: 1280px) { */
    #control-buttons > input {
        color: white;
        text-shadow: 1px 0 0 #000, 0 -1px 0 #000, 0 1px 0 #000, -1px 0 0 #000;
        background-color: var(--color);
        border-radius: 4px;
        margin: 5px;
        padding: 5px;
        touch-action: none;
    }
    /* } */

    #shoot-button {
        grid-area: shoot;
        cursor: pointer;
    }

    #left-button {
        grid-area: left;
        cursor: pointer;
    }

    #switch-button {
        grid-area: switch;
        cursor: pointer;
    }

    #right-button {
        grid-area: right;
        cursor: pointer;
    }

    #name-tag {
        grid-area: hero;
    }

    #output  {
        /* color: red; */
        font-size: 300%;
        margin: 50px;
        position: fixed;
        color: whitesmoke;
        text-shadow:  1px 0 0 #000, 0 -1px 0 #000, 0 1px 0 #000, -1px 0 0 #000;
        font-family: 'Palanquin', sans-serif;
    }

    .capital-black-hole {
        position: relative;
    }

    /* https://stackoverflow.com/questions/65839588/how-do-i-apply-transitions-to-pseudo-elements */
    .blackhole-expand {
        transition: 2s;
        display: inline-block;
        transform: rotate(359deg) scale(0.75, 1);
        color: black;
    }

    .blackhole-expand::after {
        content: "";
        display: inline-block;
        position: absolute;
        z-index: -100;
        width: 80px;
        height: 80px;
        background-color: black;
        left: 50%;
        margin-top: 7px;
        margin-left: -40px;
        border-radius: 50%;
        transition: all 1s;
    }

    .blackhole-collapse::after {
        content: "";
        display: inline-block;
        position: absolute;
        z-index: -200;
        width: 0px;
        height: 0px;
        background-color: black;
        border-radius: 50%;
        transition: all 1s;
    }


    #subtitle {
        margin: 50px;
        position: fixed;
        font-family: 'Palanquin', sans-serif;
    }


    #punc-button {
        margin: 5px;
        font-family: 'Palanquin', sans-serif;
        color: white;
        padding: 2px;
        background-color: blueviolet;
        border-radius: 4px;
    }

    body {
        margin: 0
    }

    .hidden-punc {
        visibility: hidden;
        /* color: white; */
    }

    .highlighted-punc {
        /* background-color: red; */
        visibility: visible;
        color: white;
        text-shadow: none;
        border: dashed lightblue 2px;
    }

    #start {
        text-align: center;
    }

    #ending-message-container {
        display: flex;
        flex-direction: column;
        position: absolute;
        top: 20%;
        margin: 10%;
    }

    #ending-message-container > h3 {
        color: white;
        font-family: 'Palanquin', sans-serif;
        text-shadow: 1px 0 0 #000, 0 -1px 0 #000, 0 1px 0 #000, -1px 0 0 #000;
    }


    /* Button Styles */
.refresh-game-btn {
    position: absolute;
    top: 50%;
    right: 50%;
    display: inline-block;
    padding: 10px 20px;
    font-size: 18px;
    font-weight: bold;
    text-align: center;
    text-decoration: none;
    background-color: #4CAF50;
    color: white;
    border-radius: 10px;
    border: none;
    cursor: pointer;
    transition: background-color 0.3s;
  }

  .refresh-game-btn:hover {
    background-color: #45a049;
  }

  .refresh-game-btn:active {
    background-color: #3d8b3d;
  }


  .go-away {
    display: none;
}

    @media screen and (max-width: 480px) {

        #output {
            font-size: 50px;
            margin: 50px;
            position: fixed;
            font-family: 'Palanquin', sans-serif;
        }

        h5 {
            font-size: 12px;
        }

        #input-container {
            flex-direction: column;
        }

        #input-sentence {
                width: 100%;
                border-radius: 4px;
                font-size: large;
                margin: 5px"
            }

            #output {
                font-size: 30px;
                color: whitesmoke;
                text-shadow: 1px 0 0 #000, 0 -1px 0 #000, 0 1px 0 #000, -1px 0 0 #000;
                margin: 50px 10px 10px 10px;
            }
    }

    .modal {
        position: fixed;
        top: 50%;
        left: 50%;
        /* use scale instead of display none because it allows smooth transition */
        transform: translate(-50%, -50%) scale(0);
        transition: 200ms ease-in-out;
        border: 1px solid black;
        border-radius: 10px;
        z-index: 10;
        background-color: white;
        width: 500px;
        max-width: 80%;
    }

    .modal.active {
        transform: translate(-50%, -50%) scale(1);

    }

    .modal--header {
        padding: 10px 15px;
        display: flex;
        justify-content: space-between;
        align-items: center;
        border-bottom: 1px solid black;
    }

    .modal__title {
        font-size: 1.25rem;
        font-weight: bold;
    }

    .modal__close-button {
        cursor: pointer;
        border: none;
        outline: none;
        background: none;
        font-size: 1.25rem;
        font-weight: bold;
    }

    .modal--body {
        padding: 10px 15px;
    }

    #overlay {
        position: fixed;
        opacity: 0;
        transition: 200ms ease-in-out;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: rgba(0, 0, 0, .5);
        pointer-events: none;
    }

    #overlay.active{
        opacity: 1;
        pointer-events: all;
    }


    .btn{
        position: fixed;
        top: 20;
        right: 20;
        /* transform: translate(-50%, -50%); */
        font-family: 'Palanquin', sans-serif;
        color: white;
        padding: 5px;
        background-color: blueviolet;
        border-radius: 4px;
        text-shadow: 1px 0 0 #000, 0 -1px 0 #000, 0 1px 0 #000, -1px 0 0 #000;
    }

    .btn:hover{
        opacity: 0.7;
    }

    ul {
        margin: 10px;
    }

    #footnote--body {
        background-image: linear-gradient(gold, white);
        /* background-color: gold; */
    }

    #footnote {
        background-image: linear-gradient(gold, white);
        padding: 0 5px 0 5px;
        margin-left: 20px;
        border-radius: 5px;
    }

    .speech-bubble {
        color: white;
        font-size: 1.3rem;
        word-spacing: 0.8rem;
        margin: 0 auto;
        background: var(--color);
        padding: 1.5rem;
        border: #000 solid 1px;
        border-bottom: 0.5vw solid black;
        position: relative;
        line-height: 1.5rem;
        overflow-wrap: break-word;
        word-wrap: break-word;
        word-break: break-word;
    }

    .speech-bubble::after {
        content: "";
        position: absolute;
        left: var(--speech-bubble-triangle);
        z-index: 0;
        border-left: 1px solid black;
        border-right: 20px solid transparent;
        border-top: 20px solid var(--color);
        bottom: -20;
    }

    .speech-bubble span {
        opacity: 0;
    }

    .speech-bubble span.revealed {
        opacity: 1;
    }

    .text span.green {
        color: green;
    }

    .hint-capital-underline {
        background-color: red;

    }

    .hint-contraction-underline {
        background-color: lightgreen;
    }

    .hint-article-underline {
        background-color: black;
    }

    .wite-out {
        transition: 1s;
        opacity: 0;
    }

    .superscript {
        vertical-align: super;
        font-size: smaller;
      }

/* applies to every element that owns data-rounded-word */
[data-rounded-word]{
    display:inline-block;
    transition:
        color            .6s ease,
        background-color .6s ease,
        transform        .6s ease;   /* for the optional “pop” */
  }

  /* final look once the rounded word appears */
  .rounded-word{
    background:#ffd54f;
    color:#222;
    border-radius:.25em;
    padding:0 .25em;
    font-style:italic;
    transform:scale(1.08);           /* remove if you don’t want the pop */
  }




    @media (prefers-reduced-motion: reduce) {
        *,
        ::before,
        ::after {
          animation-delay: -1ms !important;
          animation-duration: 1ms !important;
          animation-iteration-count: 1 !important;
          background-attachment: initial !important;
          scroll-behavior: auto !important;
          transition-duration: 0s !important;
          transition-delay: 0s !important;
        }
      }
